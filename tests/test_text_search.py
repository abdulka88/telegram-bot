#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from core.database import db_manager
from managers.search_manager import SearchManager

async def test_text_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–∏—Å–∫–∞
    search_manager = SearchManager(db_manager)
    
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –¢–ï–ö–°–¢–û–í–û–ì–û –ü–û–ò–°–ö–ê")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π chat_id
    test_chat_id = 12345
    
    try:
        # –¢–µ—Å—Ç 1: –£–º–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫
        print("\nüìã –¢–µ—Å—Ç 1: –£–º–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫")
        results = await search_manager.smart_text_search(
            chat_id=test_chat_id, 
            query="–º–µ–¥–æ—Å–º–æ—Ç—Ä"
        )
        print(f"‚úÖ –ü–æ–∏—Å–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫")
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ: {results['pagination']['total_count']} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        
        # –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —Å –ø—É—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
        print("\nüìã –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —Å –ø—É—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º")
        empty_results = await search_manager.smart_text_search(
            chat_id=test_chat_id, 
            query=""
        )
        print(f"‚úÖ –ü—É—Å—Ç–æ–π –ø–æ–∏—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {empty_results['pagination']['total_count']}")
        
        # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–∏—Å–∫–∞
        print("\nüìã –¢–µ—Å—Ç 3: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∏—Å–∫–∞")
        stats = search_manager.get_events_statistics(test_chat_id)
        print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞")
        print(f"üìä –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {stats['total_events']}")
        print(f"üë• –í—Å–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {stats['total_employees']}")
        
        # –¢–µ—Å—Ç 4: –ú–µ—Ç–æ–¥—ã –ø–æ–∏—Å–∫–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
        print("\nüìã –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
        popular_searches = search_manager.get_popular_searches(test_chat_id)
        print(f"‚úÖ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–æ–∏—Å–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã: {len(popular_searches)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        
        search_suggestions = search_manager._get_search_suggestions(test_chat_id, "–º–µ–¥–æ—Å")
        print(f"‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—É—á–µ–Ω—ã: {len(search_suggestions)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        
        # –¢–µ—Å—Ç 5: –í—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
        print("\nüìã –¢–µ—Å—Ç 5: –í—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π")
        test_result = {
            'full_name': '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',
            'position': '–ü–ª–æ—Ç–Ω–∏–∫',
            'event_type': '–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –æ—Å–º–æ—Ç—Ä'
        }
        highlighted = search_manager._highlight_matches(test_result, "–º–µ–¥–æ—Å")
        print(f"‚úÖ –í—ã–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {highlighted}")
        
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –¢–ï–ö–°–¢–û–í–û–ì–û –ü–û–ò–°–ö–ê –ü–†–û–ô–î–ï–ù–´!")
        print("\nüìù –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤–∫–ª—é—á–∞–µ—Ç:")
        print("  ‚úÖ –£–º–Ω—ã–π –ø–æ–∏—Å–∫ —Å —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏")
        print("  ‚úÖ –ü–æ–∏—Å–∫ –ø–æ –§–ò–û, –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –∏ —Ç–∏–ø—É —Å–æ–±—ã—Ç–∏—è")
        print("  ‚úÖ –í—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö")
        print("  ‚úÖ –ü–æ–∏—Å–∫–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ")
        print("  ‚úÖ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–æ–∏—Å–∫–∏")
        print("  ‚úÖ –ü–∞–≥–∏–Ω–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        print("  ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    success = await test_text_search()
    return success

if __name__ == "__main__":
    success = asyncio.run(main())
    sys.exit(0 if success else 1)