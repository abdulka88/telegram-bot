#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from core.database import db_manager
from managers.advanced_analytics_manager import AdvancedAnalyticsManager

async def test_temporal_charts():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    analytics_manager = AdvancedAnalyticsManager(db_manager)
    
    print("üìÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–†–ï–ú–ï–ù–ù–´–• –î–ò–ê–ì–†–ê–ú–ú")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π chat_id
    test_chat_id = 12345
    
    try:
        # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º
        print("\nüìä –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º")
        charts = analytics_manager.get_detailed_timeline_charts(test_chat_id)
        print(f"‚úÖ –î–∏–∞–≥—Ä–∞–º–º—ã –ø–æ–ª—É—á–µ–Ω—ã")
        print(f"üìä –¢–∏–ø—ã –¥–∏–∞–≥—Ä–∞–º–º: {list(charts.keys())}")
        
        # –¢–µ—Å—Ç 2: –ú–µ—Å—è—á–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞
        print("\nüìÖ –¢–µ—Å—Ç 2: –ú–µ—Å—è—á–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞")
        monthly_data = charts.get('monthly', {})
        print(f"‚úÖ –ú–µ—Å—è—á–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞")
        if monthly_data.get('chart'):
            print("üìä –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏–∞–≥—Ä–∞–º–º—ã:")
            print(monthly_data['chart'][:200] + "..." if len(monthly_data['chart']) > 200 else monthly_data['chart'])
        
        # –¢–µ—Å—Ç 3: –ù–µ–¥–µ–ª—å–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞
        print("\nüìÖ –¢–µ—Å—Ç 3: –ù–µ–¥–µ–ª—å–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞")
        weekly_data = charts.get('weekly', {})
        print(f"‚úÖ –ù–µ–¥–µ–ª—å–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞")
        if weekly_data.get('chart'):
            print("üìä –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏–∞–≥—Ä–∞–º–º—ã:")
            print(weekly_data['chart'][:200] + "..." if len(weekly_data['chart']) > 200 else weekly_data['chart'])
        
        # –¢–µ—Å—Ç 4: –î–Ω–µ–≤–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞
        print("\nüìÖ –¢–µ—Å—Ç 4: –î–Ω–µ–≤–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞")
        daily_data = charts.get('daily', {})
        print(f"‚úÖ –î–Ω–µ–≤–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞")
        if daily_data.get('chart'):
            print("üìä –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏–∞–≥—Ä–∞–º–º—ã:")
            print(daily_data['chart'][:200] + "..." if len(daily_data['chart']) > 200 else daily_data['chart'])
        
        # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–≤–æ–¥–æ–∫
        print("\nüìä –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–≤–æ–¥–æ–∫")
        for chart_type, chart_data in charts.items():
            summary = chart_data.get('summary', {})
            print(f"‚úÖ {chart_type.capitalize()} —Å–≤–æ–¥–∫–∞: {len(summary)} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
            if summary:
                print(f"   üìà –°–æ–¥–µ—Ä–∂–∏—Ç: {list(summary.keys())}")
        
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –í–†–ï–ú–ï–ù–ù–´–• –î–ò–ê–ì–†–ê–ú–ú –ü–†–û–ô–î–ï–ù–´!")
        print("\nüìù –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤–∫–ª—é—á–∞–µ—Ç:")
        print("  ‚úÖ –ú–µ—Å—è—á–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏")
        print("  ‚úÖ –ù–µ–¥–µ–ª—å–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã —Å –∞–Ω–∞–ª–∏–∑–æ–º –∑–∞–≥—Ä—É–∑–∫–∏")
        print("  ‚úÖ –î–Ω–µ–≤–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã —Å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π —Å–æ–±—ã—Ç–∏–π")
        print("  ‚úÖ –°–≤–æ–¥–∫–∏ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –∏ –ø–∏–∫–æ–≤—ã–º–∏ –ø–µ—Ä–∏–æ–¥–∞–º–∏")
        print("  ‚úÖ –¶–≤–µ—Ç–æ–≤—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è (üü¢üü°üî¥)")
        print("  ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    success = await test_temporal_charts()
    return success

if __name__ == "__main__":
    success = asyncio.run(main())
    sys.exit(0 if success else 1)