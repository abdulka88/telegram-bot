#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç—á–µ—Ç–æ–≤
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from core.database import db_manager
from managers.automated_reports_manager import AutomatedReportsManager

async def test_automated_reports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç—á–µ—Ç–æ–≤"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –æ—Ç—á–µ—Ç–æ–≤
    reports_manager = AutomatedReportsManager(db_manager)
    
    print("üìä –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–• –û–¢–ß–ï–¢–û–í")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π chat_id
    test_chat_id = 12345
    
    try:
        # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç—á–µ—Ç–æ–≤
        print("\n‚öôÔ∏è –¢–µ—Å—Ç 1: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—á–µ—Ç–æ–≤")
        settings = reports_manager.get_report_settings(test_chat_id)
        print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã")
        print(f"üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏: {len(settings)} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
        print(f"üìÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ: {'–≤–∫–ª—é—á–µ–Ω—ã' if settings.get('daily_enabled') else '–æ—Ç–∫–ª—é—á–µ–Ω—ã'}")
        print(f"üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ: {'–≤–∫–ª—é—á–µ–Ω—ã' if settings.get('weekly_enabled') else '–æ—Ç–∫–ª—é—á–µ–Ω—ã'}")
        print(f"üìà –ú–µ—Å—è—á–Ω—ã–µ: {'–≤–∫–ª—é—á–µ–Ω—ã' if settings.get('monthly_enabled') else '–æ—Ç–∫–ª—é—á–µ–Ω—ã'}")
        
        # –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
        print("\nüìÖ –¢–µ—Å—Ç 2: –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç")
        daily_report = await reports_manager._generate_daily_summary(test_chat_id)
        print(f"‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω")
        if daily_report:
            print(f"üìä –î–ª–∏–Ω–∞ –æ—Ç—á–µ—Ç–∞: {len(daily_report)} —Å–∏–º–≤–æ–ª–æ–≤")
            print("üìÑ –ü—Ä–µ–≤—å—é:")
            print(daily_report[:200] + "..." if len(daily_report) > 200 else daily_report)
        else:
            print("üìä –û—Ç—á–µ—Ç –ø—É—Å—Ç (–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)")
        
        # –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
        print("\nüìä –¢–µ—Å—Ç 3: –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç")
        weekly_report = await reports_manager._generate_weekly_report(test_chat_id)
        print(f"‚úÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω")
        if weekly_report:
            print(f"üìä –î–ª–∏–Ω–∞ –æ—Ç—á–µ—Ç–∞: {len(weekly_report)} —Å–∏–º–≤–æ–ª–æ–≤")
            print("üìÑ –ü—Ä–µ–≤—å—é:")
            print(weekly_report[:200] + "..." if len(weekly_report) > 200 else weekly_report)
        else:
            print("üìä –û—Ç—á–µ—Ç –ø—É—Å—Ç (–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)")
        
        # –¢–µ—Å—Ç 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ—Å—è—á–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
        print("\nüìà –¢–µ—Å—Ç 4: –ú–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç")
        monthly_report = await reports_manager._generate_monthly_report(test_chat_id)
        print(f"‚úÖ –ú–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω")
        if monthly_report:
            print(f"üìä –î–ª–∏–Ω–∞ –æ—Ç—á–µ—Ç–∞: {len(monthly_report)} —Å–∏–º–≤–æ–ª–æ–≤")
            print("üìÑ –ü—Ä–µ–≤—å—é:")
            print(monthly_report[:200] + "..." if len(monthly_report) > 200 else monthly_report)
        else:
            print("üìä –û—Ç—á–µ—Ç –ø—É—Å—Ç (–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)")
        
        # –¢–µ—Å—Ç 5: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        print("\n‚è∞ –¢–µ—Å—Ç 5: –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤")
        schedules = reports_manager.setup_report_schedules()
        print(f"‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")
        print(f"üìÖ –¢–∏–ø–æ–≤ –æ—Ç—á–µ—Ç–æ–≤: {len(schedules)}")
        for schedule in schedules:
            status = "–≤–∫–ª—é—á–µ–Ω" if schedule['enabled'] else "–æ—Ç–∫–ª—é—á–µ–Ω"
            print(f"   üìä {schedule['name']}: {schedule['frequency']} –≤ {schedule['time']} ({status})")
        
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–• –û–¢–ß–ï–¢–û–í –ü–†–û–ô–î–ï–ù–´!")
        print("\nüìù –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤–∫–ª—é—á–∞–µ—Ç:")
        print("  ‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Å–≤–æ–¥–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å –∞–Ω–∞–ª–∏–∑–æ–º —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è")
        print("  ‚úÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç—á–µ—Ç—ã —Å —Ç—Ä–µ–Ω–¥–∞–º–∏")
        print("  ‚úÖ –ú–µ—Å—è—á–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π")
        print("  ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ/–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤")
        print("  ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É")
        print("  ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é")
        print("  ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–æ–π")
        print("  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    success = await test_automated_reports()
    return success

if __name__ == "__main__":
    success = asyncio.run(main())
    sys.exit(0 if success else 1)