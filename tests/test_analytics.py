#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from core.database import db_manager
from managers.advanced_analytics_manager import AdvancedAnalyticsManager

async def test_advanced_analytics():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    analytics_manager = AdvancedAnalyticsManager(db_manager)
    
    print("üìä –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–°–®–ò–†–ï–ù–ù–û–ô –ê–ù–ê–õ–ò–¢–ò–ö–ò")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π chat_id
    test_chat_id = 12345
    
    try:
        # –¢–µ—Å—Ç 1: –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤
        print("\nüìà –¢–µ—Å—Ç 1: –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤")
        trends = analytics_manager.get_trends_analysis(test_chat_id, 6)
        print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω")
        print(f"üìä –°—Ç–∞—Ç—É—Å: {trends.get('trend', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        
        # –¢–µ—Å—Ç 2: –ù–µ–¥–µ–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
        print("\nüìÖ –¢–µ—Å—Ç 2: –ù–µ–¥–µ–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
        weekly_stats = analytics_manager.get_weekly_analysis(test_chat_id, 8)
        print(f"‚úÖ –ù–µ–¥–µ–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞")
        print(f"üìä –ù–µ–¥–µ–ª—å –≤ –∞–Ω–∞–ª–∏–∑–µ: {len(weekly_stats)}")
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞–≥—Ä—É–∑–∫–∏
        print("\nüéØ –¢–µ—Å—Ç 3: –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞–≥—Ä—É–∑–∫–∏")
        forecast = analytics_manager.get_workload_forecast(test_chat_id, 30)
        summary = forecast.get('summary', {})
        print(f"‚úÖ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞–≥—Ä—É–∑–∫–∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω")
        print(f"üìä –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π –≤ –ø—Ä–æ–≥–Ω–æ–∑–µ: {summary.get('total_events', 0)}")
        print(f"‚≠ï –°—Ä–µ–¥–Ω–µ–µ –≤ –¥–µ–Ω—å: {summary.get('avg_per_day', 0):.1f}")
        
        # –¢–µ—Å—Ç 4: –ú–µ—Ç—Ä–∏–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        print("\n‚ö° –¢–µ—Å—Ç 4: –ú–µ—Ç—Ä–∏–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        efficiency = analytics_manager.get_efficiency_metrics(test_chat_id)
        print(f"‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω—ã")
        print(f"üìä –û—Ü–µ–Ω–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {efficiency.get('efficiency_grade', 'N/A')}")
        print(f"üìà –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤: {efficiency.get('compliance_rate', 0)}%")
        
        # –¢–µ—Å—Ç 5: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–∞–≥—Ä–∞–º–º
        print("\nüìä –¢–µ—Å—Ç 5: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã
        test_trend_data = {
            'direction': 'rising',
            'change_percent': 15.5,
            'description': '–†–æ—Å—Ç –Ω–∞ 15.5%'
        }
        
        trend_chart = analytics_manager.generate_text_charts(test_trend_data, 'trend')
        print(f"‚úÖ –î–∏–∞–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–¥–∞: {trend_chart}")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–æ–ª–±—á–∞—Ç–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
        test_bar_data = {
            '–ü–ª–æ—Ç–Ω–∏–∫': 10,
            '–ú–∞–ª—è—Ä': 7,
            '–ú–∞—Å—Ç–µ—Ä': 5
        }
        
        bar_chart = analytics_manager.generate_text_charts(test_bar_data, 'bar')
        print(f"‚úÖ –°—Ç–æ–ª–±—á–∞—Ç–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ —Å–æ–∑–¥–∞–Ω–∞:")
        print(bar_chart)
        
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –†–ê–°–®–ò–†–ï–ù–ù–û–ô –ê–ù–ê–õ–ò–¢–ò–ö–ò –ü–†–û–ô–î–ï–ù–´!")
        print("\nüìù –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤–∫–ª—é—á–∞–µ—Ç:")
        print("  ‚úÖ –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ —Å –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏")
        print("  ‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ (–Ω–µ–¥–µ–ª–∏/–º–µ—Å—è—Ü—ã)")
        print("  ‚úÖ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –Ω–∞–≥—Ä—É–∑–∫–∏")
        print("  ‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è —Å—Ä–æ–∫–æ–≤")
        print("  ‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è")
        print("  ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –¥–∞—à–±–æ—Ä–¥–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    success = await test_advanced_analytics()
    return success

if __name__ == "__main__":
    success = asyncio.run(main())
    sys.exit(0 if success else 1)