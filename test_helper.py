#!/usr/bin/env python3
"""
–ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞
"""

import os
import sys
import subprocess

def print_menu():
    """–ü–µ—á–∞—Ç—å –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    print("\n" + "="*60)
    print("üß™ –°–ò–°–¢–ï–ú–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø TELEGRAM –ë–û–¢–ê")
    print("="*60)
    print("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print()
    print("1. üìã –ü–æ–∫–∞–∑–∞—Ç—å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä—É—á–Ω–æ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é")
    print("2. üéØ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –ø–æ—à–∞–≥–æ–≤–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("3. ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π")
    print("4. üìä –°–æ–∑–¥–∞—Ç—å —á–µ–∫–ª–∏—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("5. üîß –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞")
    print("6. üìÅ –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±–æ—Ç–∞")
    print("7. ‚ùå –í—ã—Ö–æ–¥")
    print("="*60)

def check_bot_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞"""
    try:
        result = subprocess.run(['./manage.sh', 'status'], 
                              capture_output=True, text=True, cwd='/Users/vadim/telegram_bot')
        print("üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:")
        print(result.stdout)
        if result.stderr:
            print("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:")
            print(result.stderr)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")

def show_bot_logs():
    """–ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤ –±–æ—Ç–∞"""
    try:
        result = subprocess.run(['./manage.sh', 'logs', '-n', '30'], 
                              capture_output=True, text=True, cwd='/Users/vadim/telegram_bot')
        print("üìÅ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤:")
        print(result.stdout)
        if result.stderr:
            print("‚ö†Ô∏è –û—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö:")
            print(result.stderr)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: {e}")

def run_guide():
    """–ó–∞–ø—É—Å–∫ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é"""
    try:
        subprocess.run([sys.executable, 'real_bot_tester.py', '--mode', 'guide'], 
                      cwd='/Users/vadim/telegram_bot')
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞: {e}")

def run_interactive_testing():
    """–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\nüéØ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ—à–∞–≥–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
    print("–≠—Ç–æ—Ç —Ä–µ–∂–∏–º –ø—Ä–æ–≤–µ–¥–µ—Ç –≤–∞—Å —á–µ—Ä–µ–∑ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ —à–∞–≥ –∑–∞ —à–∞–≥–æ–º.")
    print("–ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å, —Ä–∞–±–æ—Ç–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è –∏–ª–∏ –Ω–µ—Ç.")
    
    proceed = input("\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (–¥–∞/–Ω–µ—Ç): ").strip().lower()
    if proceed in ['–¥–∞', 'yes', 'y', '–¥']:
        try:
            subprocess.run([sys.executable, 'interactive_manual_tester.py'], 
                          cwd='/Users/vadim/telegram_bot')
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    else:
        print("‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")

def run_automated_testing():
    """–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\nü§ñ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π...")
    print("–≠—Ç–æ—Ç —Ä–µ–∂–∏–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞.")
    
    proceed = input("\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (–¥–∞/–Ω–µ—Ç): ").strip().lower()
    if proceed in ['–¥–∞', 'yes', 'y', '–¥']:
        try:
            subprocess.run([sys.executable, 'manual_testing_framework.py', '--mode', 'auto'], 
                          cwd='/Users/vadim/telegram_bot')
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    else:
        print("‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")

def create_checklist():
    """–°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–ª–∏—Å—Ç–∞"""
    try:
        subprocess.run([sys.executable, 'real_bot_tester.py', '--mode', 'checklist'], 
                      cwd='/Users/vadim/telegram_bot')
        print("‚úÖ –ß–µ–∫–ª–∏—Å—Ç —Å–æ–∑–¥–∞–Ω –≤ —Ñ–∞–π–ª–µ manual_testing_checklist.json")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–∫–ª–∏—Å—Ç–∞: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    current_dir = os.getcwd()
    target_dir = '/Users/vadim/telegram_bot'
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    if current_dir != target_dir:
        try:
            os.chdir(target_dir)
            print(f"üìÅ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞: {target_dir}")
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é {target_dir}: {e}")
            return
    
    while True:
        try:
            print_menu()
            choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç (1-7): ").strip()
            
            if choice == '1':
                run_guide()
                
            elif choice == '2':
                run_interactive_testing()
                
            elif choice == '3':
                run_automated_testing()
                
            elif choice == '4':
                create_checklist()
                
            elif choice == '5':
                check_bot_status()
                
            elif choice == '6':
                show_bot_logs()
                
            elif choice == '7':
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
                
            else:
                print("‚ùì –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 7.")
            
            # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º –º–µ–Ω—é —Å–Ω–æ–≤–∞
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
            
        except KeyboardInterrupt:
            print("\nüëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ Ctrl+C")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()