"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∏—Å—Ç–µ–º—ã
"""

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler

from core.security import is_admin
from core.utils import create_callback_data, parse_callback_data
from core.database import db_manager
from config.constants import ConversationStates

logger = logging.getLogger(__name__)

async def set_notification_days(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–Ω–µ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    query = update.callback_query
    await query.answer()
    
    chat_id = update.effective_chat.id
    user_id = update.effective_user.id
    
    if not is_admin(chat_id, user_id):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    current_settings = db_manager.execute_with_retry('''
        SELECT notification_days FROM chat_settings WHERE chat_id = ?
    ''', (chat_id,), fetch="one")
    
    current_days = current_settings['notification_days'] if current_settings else 90
    
    keyboard = [
        [InlineKeyboardButton("30 –¥–Ω–µ–π", callback_data=create_callback_data("save_notif_days", days=30))],
        [InlineKeyboardButton("60 –¥–Ω–µ–π", callback_data=create_callback_data("save_notif_days", days=60))],
        [InlineKeyboardButton("90 –¥–Ω–µ–π", callback_data=create_callback_data("save_notif_days", days=90))],
        [InlineKeyboardButton("120 –¥–Ω–µ–π", callback_data=create_callback_data("save_notif_days", days=120))],
        [InlineKeyboardButton("üîô –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data=create_callback_data("settings"))]
    ]
    
    text = (
        f"‚è∞ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–Ω–µ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</b>\n\n"
        f"–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <b>{current_days} –¥–Ω–µ–π</b>\n\n"
        f"–ó–∞ —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –¥–æ —Å–æ–±—ã—Ç–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–µ—Ä–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ?\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:"
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text=text,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode='HTML'
    )

async def save_notification_days(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–Ω–µ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    query = update.callback_query
    await query.answer()
    
    data = parse_callback_data(query.data)
    days = data.get('days')
    chat_id = update.effective_chat.id
    
    if not days:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–Ω–µ–π"
        )
        return
    
    try:
        db_manager.execute_with_retry('''
            UPDATE chat_settings 
            SET notification_days = ? 
            WHERE chat_id = ?
        ''', (days, chat_id))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"‚úÖ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!</b>\n\n"
                 f"‚è∞ –î–Ω–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: <b>{days} –¥–Ω–µ–π</b>\n\n"
                 f"–¢–µ–ø–µ—Ä—å –ø–µ—Ä–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∑–∞ {days} –¥–Ω–µ–π –¥–æ —Å–æ–±—ã—Ç–∏—è.",
            parse_mode='HTML'
        )
        
    except Exception as e:
        logger.error(f"Error saving notification days: {e}")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫"
        )

async def set_timezone(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞"""
    query = update.callback_query
    await query.answer()
    
    chat_id = update.effective_chat.id
    user_id = update.effective_user.id
    
    if not is_admin(chat_id, user_id):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    current_settings = db_manager.execute_with_retry('''
        SELECT timezone FROM chat_settings WHERE chat_id = ?
    ''', (chat_id,), fetch="one")
    
    current_tz = current_settings['timezone'] if current_settings else 'Europe/Moscow'
    
    keyboard = [
        [InlineKeyboardButton("üá∑üá∫ –ú–æ—Å–∫–≤–∞ (Europe/Moscow)", callback_data=create_callback_data("save_timezone", tz="Europe/Moscow"))],
        [InlineKeyboardButton("üá∑üá∫ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ (Asia/Yekaterinburg)", callback_data=create_callback_data("save_timezone", tz="Asia/Yekaterinburg"))],
        [InlineKeyboardButton("üá∑üá∫ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ (Asia/Novosibirsk)", callback_data=create_callback_data("save_timezone", tz="Asia/Novosibirsk"))],
        [InlineKeyboardButton("üá∑üá∫ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫ (Asia/Vladivostok)", callback_data=create_callback_data("save_timezone", tz="Asia/Vladivostok"))],
        [InlineKeyboardButton("üåç UTC", callback_data=create_callback_data("save_timezone", tz="UTC"))],
        [InlineKeyboardButton("üîô –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data=create_callback_data("settings"))]
    ]
    
    text = (
        f"üïí <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞</b>\n\n"
        f"–¢–µ–∫—É—â–∏–π –ø–æ—è—Å: <b>{current_tz}</b>\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:"
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text=text,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode='HTML'
    )

async def save_timezone(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞"""
    query = update.callback_query
    await query.answer()
    
    data = parse_callback_data(query.data)
    timezone = data.get('tz')
    chat_id = update.effective_chat.id
    
    if not timezone:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å"
        )
        return
    
    try:
        db_manager.execute_with_retry('''
            UPDATE chat_settings 
            SET timezone = ? 
            WHERE chat_id = ?
        ''', (timezone, chat_id))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"‚úÖ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!</b>\n\n"
                 f"üïí –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: <b>{timezone}</b>\n\n"
                 f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ø–æ –º–µ—Å—Ç–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏.",
            parse_mode='HTML'
        )
        
    except Exception as e:
        logger.error(f"Error saving timezone: {e}")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫"
        )